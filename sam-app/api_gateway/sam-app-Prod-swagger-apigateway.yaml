---
swagger: "2.0"
info:
  version: "1.0"
  title: "sam-app"
host: "vdci4imfbh.execute-api.us-east-1.amazonaws.com"
basePath: "/Prod"
schemes:
- "https"
paths:
  /api/customer/match:
    get:
      produces:
      - "application/json"
      responses:
        200:
          description: "200 response"
          headers:
            Access-Control-Allow-Origin:
              type: "string"
            Access-Control-Allow-Methods:
              type: "string"
            Access-Control-Allow-Headers:
              type: "string"
      x-amazon-apigateway-integration:
        uri: "arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:370837309407:function:proserveportfolio-match-and-predict/invocations"
        responses:
          default:
            statusCode: "200"
            responseParameters:
              method.response.header.Access-Control-Allow-Origin: "'*'"
        passthroughBehavior: "when_no_match"
        httpMethod: "POST"
        timeoutInMillis: 15000
        contentHandling: "CONVERT_TO_TEXT"
        type: "aws_proxy"
    options:
      consumes:
      - "application/json"
      produces:
      - "application/json"
      responses:
        200:
          description: "200 response"
          headers:
            Access-Control-Allow-Origin:
              type: "string"
            Access-Control-Allow-Methods:
              type: "string"
            Access-Control-Allow-Headers:
              type: "string"
      x-amazon-apigateway-integration:
        responses:
          200:
            statusCode: "200"
            responseParameters:
              method.response.header.Access-Control-Allow-Methods: "'GET,OPTIONS'"
              method.response.header.Access-Control-Allow-Headers: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,xyz,table_name,index_name,offering_name,offering_type,caf_perspective,capability,gsp_vertical,id_num,offering_description,offering_maturity_level,owner,practice_group,wiki_link,delivery_kit,sales_kit,customer_name,product_name,close_date,list_price,list_price_currency,owner_name,practice_lookup-practice_name,quantity,stage,total_opportunity,total_opportunity_currency,product_code,sales'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
        passthroughBehavior: "when_no_match"
        requestTemplates:
          application/json: "{\"statusCode\": 200}"
        type: "mock"
  /api/customer/predict:
    get:
      produces:
      - "application/json"
      responses:
        200:
          description: "200 response"
          headers:
            Access-Control-Allow-Origin:
              type: "string"
            Access-Control-Allow-Credentials:
              type: "string"
            Access-Control-Allow-Methods:
              type: "string"
      x-amazon-apigateway-integration:
        uri: "arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:370837309407:function:proserveportfolio-predict/invocations"
        responses:
          default:
            statusCode: "200"
            responseParameters:
              method.response.header.Access-Control-Allow-Origin: "'*'"
        passthroughBehavior: "when_no_match"
        httpMethod: "POST"
        timeoutInMillis: 15000
        contentHandling: "CONVERT_TO_TEXT"
        type: "aws_proxy"
    options:
      produces:
      - "application/json"
      responses:
        200:
          description: "200 response"
          headers:
            Access-Control-Allow-Origin:
              type: "string"
            Access-Control-Allow-Methods:
              type: "string"
            Access-Control-Allow-Headers:
              type: "string"
      x-amazon-apigateway-integration:
        uri: "arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:370837309407:function:proserveportfolio-predict/invocations"
        responses:
          default:
            statusCode: "200"
            responseParameters:
              method.response.header.Access-Control-Allow-Methods: "'GET,OPTIONS'"
              method.response.header.Access-Control-Allow-Headers: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,xyz,table_name,index_name,offering_name,offering_type,caf_perspective,capability,gsp_vertical,id_num,offering_description,offering_maturity_level,owner,practice_group,wiki_link,delivery_kit,sales_kit,customer_name,product_name,close_date,list_price,list_price_currency,owner_name,practice_lookup-practice_name,quantity,stage,total_opportunity,total_opportunity_currency,product_code'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
        passthroughBehavior: "when_no_match"
        httpMethod: "POST"
        contentHandling: "CONVERT_TO_TEXT"
        type: "aws"
  /api/db/predict:
    get:
      produces:
      - "application/json"
      responses:
        200:
          description: "200 response"
          headers:
            Access-Control-Allow-Origin:
              type: "string"
            Access-Control-Allow-Credentials:
              type: "string"
            Access-Control-Allow-Methods:
              type: "string"
      x-amazon-apigateway-integration:
        uri: "arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:370837309407:function:proserveportfolio_log_predictions/invocations"
        responses:
          default:
            statusCode: "200"
            responseParameters:
              method.response.header.Access-Control-Allow-Origin: "'*'"
        passthroughBehavior: "when_no_match"
        httpMethod: "POST"
        contentHandling: "CONVERT_TO_TEXT"
        type: "aws_proxy"
    options:
      consumes:
      - "application/json"
      produces:
      - "application/json"
      responses:
        200:
          description: "200 response"
          headers:
            Access-Control-Allow-Origin:
              type: "string"
            Access-Control-Allow-Methods:
              type: "string"
            Access-Control-Allow-Headers:
              type: "string"
      x-amazon-apigateway-integration:
        responses:
          200:
            statusCode: "200"
            responseParameters:
              method.response.header.Access-Control-Allow-Methods: "'GET,OPTIONS'"
              method.response.header.Access-Control-Allow-Headers: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,xyz,table_name,index_name,offering_name,offering_type,caf_perspective,capability,gsp_vertical,id_num,offering_description,offering_maturity_level,owner,practice_group,wiki_link,delivery_kit,sales_kit,customer_name,product_name,close_date,list_price,list_price_currency,owner_name,practice_lookup-practice_name,quantity,stage,total_opportunity,total_opportunity_currency,product_code,predictee_name_type,predictor_name_type'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
        passthroughBehavior: "when_no_match"
        requestTemplates:
          application/json: "{\"statusCode\": 200}"
        type: "mock"
  /api/db/query:
    get:
      produces:
      - "application/json"
      parameters:
      - name: "Offering_Name"
        in: "header"
        required: false
        type: "string"
      - name: "GSP_Vertical"
        in: "header"
        required: false
        type: "string"
      - name: "Customer_Name"
        in: "header"
        required: false
        type: "string"
      - name: "Index_Name"
        in: "header"
        required: false
        type: "string"
      - name: "Table_Name"
        in: "header"
        required: true
        type: "string"
      - name: "Offering_Type"
        in: "header"
        required: false
        type: "string"
      - name: "Product_Name"
        in: "header"
        required: false
        type: "string"
      - name: "Offering_Maturity_Level"
        in: "header"
        required: false
        type: "string"
      responses:
        200:
          description: "200 response"
          headers:
            Access-Control-Allow-Origin:
              type: "string"
            Access-Control-Allow-Credentials:
              type: "string"
            Access-Control-Allow-Methods:
              type: "string"
        400:
          description: "400 response"
          headers:
            Access-Control-Allow-Origin:
              type: "string"
      x-amazon-apigateway-request-validator: "Validate body, query string parameters,\
        \ and headers"
      x-amazon-apigateway-integration:
        uri: "arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:370837309407:function:sam-app-DBQueryFunction/invocations"
        responses:
          default:
            statusCode: "200"
            responseParameters:
              method.response.header.Access-Control-Allow-Origin: "'*'"
        passthroughBehavior: "when_no_match"
        httpMethod: "POST"
        cacheNamespace: "iy8qmo"
        cacheKeyParameters:
        - "method.request.header.Table_Name"
        - "method.request.header.Product_Name"
        - "method.request.header.Offering_Type"
        - "method.request.header.Offering_Name"
        - "method.request.header.Offering_Maturity_Level"
        - "method.request.header.Index_Name"
        - "method.request.header.GSP_Vertical"
        - "method.request.header.Customer_Name"
        contentHandling: "CONVERT_TO_TEXT"
        type: "aws_proxy"
    options:
      consumes:
      - "application/json"
      produces:
      - "application/json"
      responses:
        200:
          description: "200 response"
          headers:
            Access-Control-Allow-Origin:
              type: "string"
            Access-Control-Allow-Methods:
              type: "string"
            Access-Control-Allow-Headers:
              type: "string"
      x-amazon-apigateway-integration:
        responses:
          200:
            statusCode: "200"
            responseParameters:
              method.response.header.Access-Control-Allow-Methods: "'GET,OPTIONS'"
              method.response.header.Access-Control-Allow-Headers: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,xyz,table_name,index_name,offering_name,offering_type,caf_perspective,capability,gsp_vertical,id_num,offering_description,offering_maturity_level,owner,practice_group,wiki_link,delivery_kit,sales_kit,customer_name,product_name,close_date,list_price,list_price_currency,owner_name,practice_lookup-practice_name,quantity,stage,total_opportunity,total_opportunity_currency,product_code,predictor_name_type,predictee_name_type'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
        passthroughBehavior: "when_no_match"
        requestTemplates:
          application/json: "{\"statusCode\": 200}"
        type: "mock"
x-amazon-apigateway-gateway-responses:
  DEFAULT_5XX:
    responseParameters:
      gatewayresponse.header.Access-Control-Allow-Methods: "'GET,OPTIONS'"
      gatewayresponse.header.Access-Control-Allow-Origin: "'*'"
      gatewayresponse.header.Access-Control-Allow-Headers: "'*'"
  DEFAULT_4XX:
    responseParameters:
      gatewayresponse.header.Access-Control-Allow-Methods: "'GET,OPTIONS'"
      gatewayresponse.header.Access-Control-Allow-Origin: "'*'"
      gatewayresponse.header.Access-Control-Allow-Headers: "'*'"
x-amazon-apigateway-request-validators:
  Validate body, query string parameters, and headers:
    validateRequestParameters: true
    validateRequestBody: true
